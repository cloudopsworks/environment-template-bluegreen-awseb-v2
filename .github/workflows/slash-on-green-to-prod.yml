##
# (c) 2022 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Slash command on Green To Prod
on:
  repository_dispatch:
    types:
      - green-to-prod-command
      - ok-to-prod-command
      - to-prod-command
      - apply-prod-command

permissions:
  issues: write
  contents: write
  packages: read
  statuses: write
  pull-requests: write

jobs:
  force-trafic-switch:
    runs-on: ubuntu-latest
    steps:
      # Get pull request head
      - name: Get Pull Request HEAD Ref
        uses: actions/github-script@v6
        id: the_pull
        with:
          github-token: ${{secrets.BOT_TOKEN}}
          result-encoding: string
          script: |
            const pull_request_number = '${{ github.event.client_payload.slash_command.args.named.pull_request_number }}';
            const {data: thePull} = await github.rest.pulls.get({
              pull_number: pull_request_number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            return thePull.head.ref;

      # Proceed with checkout of source with all the references (depth=0)  
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ steps.the_pull.outputs.result }}
          token: ${{ secrets.BOT_TOKEN }}

      # Installs Terraform
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.3

      - name: Check if can go Green to Prod
        uses: actions/github-script@v6
        id: check_go
        with:
          github-token: ${{secrets.BOT_TOKEN}}
          result-encoding: string
          script: |
            const pull_request_number = '${{ github.event.client_payload.slash_command.args.named.pull_request_number }}';
            const {data: pullLabels} = await github.rest.issues.listLabelsOnIssue({
              issue_number: pull_request_number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const labels = pullLabels.map(label => label.name);

            var can_proceed = false;

            for (const aLabel of labels) {
              if ( aLabel == 'deployed' ) {
                can_proceed = true;
              }
            }
            
            if ( !can_proceed ) {
              const message = `Cannot proceed with Green To PROD promotion, conditions not met.
              Please check if there were any error on Validations.
            
              Submit: */green-to-prod|/approve|/lgtm|/approved* in order to continue with next step of Blue/Green Deployment.`;
            
              github.rest.issues.createComment({
                issue_number: pull_request_number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            }
            
            return ( can_proceed ? 'true' : 'false' );

      # Replacement on terraform.tfvars the switch value for the env
      - name: Proceed to switch to new environment
        if: ${{ steps.check_go.outputs.result == 'true' }}
        run: |
          green_server_version=$(head -n 1 .bluegreen_state | head -c 1)
          sed -i -e "s/deployment_traffic[ \t]*=.*/deployment_traffic = \"${green_server_version}\"/g" terraform.tfvars

      # Do Tidy on terraform Files
      - name: Terraform tidy up
        if: ${{ steps.check_go.outputs.result == 'true' }}
        run: terraform fmt

      - name: Push change to branch
        if: ${{ steps.check_go.outputs.result == 'true' }}
        run: |
          git add .
          git config --global user.name "${{ secrets.BOT_USER }}"
          git config --global user.email "${{ secrets.BOT_EMAIL }}"
          git commit -a -m "chore: Pushing changes promotion of green environment to prod."
          git push origin

      - name: Label entry at proper step
        uses: actions/github-script@v6
        if: ${{ steps.check_go.outputs.result == 'true' }}
        with:
          github-token: ${{secrets.BOT_TOKEN}}
          script: |
            const pull_request_number = '${{ github.event.client_payload.slash_command.args.named.pull_request_number }}';
            
            github.rest.issues.addLabels({
              issue_number: pull_request_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [ 'green-to-prod' ]
            });
